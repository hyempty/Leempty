from tkinter import *
import random

li = []
listst = []
win = Tk()
win.geometry("500x500")
win.title("teacher")
win.option_add("*Font", "25")

# 학생 수 입력
label1 = Label(win, text="학생 수")
label1.pack()
num = Entry(win)
num.pack()

def entst():
    # 학생 닉네임
    label2 = Label(win, text="학생 닉네임")
    label2.pack()
    a = int(num.get())
    for i in range(a):
        name = Entry(win)
        name.pack()
        li.append(name)

    # 타이머 설정
    label3 = Label(win, text="제한시간(초)")
    label3.pack()
    time = Entry(win)
    time.pack()

    # 입력 완료 버튼
    def reset_screen(): 
        a = int(num.get())
        for entry in li:
            listst.append(entry.get())
        c = time.get()
        for widget in win.winfo_children():
            widget.destroy()
        
        # 순서 뽑기 버튼
        def randomturn():
            global listst
            random.shuffle(listst)
            result = "\n".join(f"{i+1}. {name}" for i, name in enumerate(listst))
            labelturn = Label(win, text=result)
            labelturn.pack()

            # 학생 창 실행
            win2 = Toplevel()
            win2.geometry("500x500")
            win2.title("student")
            win2.option_add("*Font", "25")

            def gamestb():
                label4 = Label(win, text="질문을 입력해주세요")
                label4.pack()
                que = Entry(win)
                que.pack()

                def que_complete():
                    scores = {}
                    answerli = []
                    label5 = Label(win2, text = f"{que.get()}")
                    label5.pack()
                    ia = int(a)
                    for n in range(ia):
                        label5 = Label(win2, text=f"{n+1}번째 학생이 답안을 입력하세요")
                        label5.pack()
                        answer_entry = Entry(win2)
                        answer_entry.pack()
                        answerli.append(answer_entry)

                    def select_answer(name):
                        # 원래 창에 있던 것들 제거
                        for widget in win.winfo_children():
                            widget.destroy()
                        # 채택된 답변과 점수 표시
                        Label(win, text=f"{name} (이)가 채택되었습니다.").pack(pady=10)
                        Label(win, text=f"점수: {scores[name]}").pack(pady=10)
                        # 계속하기 버튼과 끝내기 버튼 생성
                        Button(win, text="계속하기", command=lambda: reset_screen()).pack(pady=10)
                        Button(win, text="끝내기", command=win.quit).pack(pady=10)

                    def answerh():
                        for answer_entry in answerli:
                            answer = answer_entry.get()
                            scores[answer] = scores.get(answer, 0) + 1
                            select = Button(win, text=f"{answer}", command=lambda a=answer: select_answer(a))
                            select.pack()

                    answerb = Button(win2, text="답변 완료", command=answerh)
                    answerb.pack()

                queb = Button(win, text="질문 완료", command=que_complete)
                queb.pack()

            gamest = Button(win2, text="게임시작", command=gamestb)
            gamest.pack()

        turn = Button(win, text="순서 뽑기", command=randomturn)
        turn.pack()

    enter = Button(win, text="입력완료", command=reset_screen)
    enter.pack()

enterst = Button(win, text="입력완료", command=entst)
enterst.pack()

win.mainloop()

